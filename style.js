"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.styleCtx = exports.box = exports.bfg = exports.bottomRadius = exports.vmarg = exports.vpad = exports.topRadius = exports.vs = exports.hs = exports.spc = exports.bords = exports.bord = exports.tAlign = exports.border = exports.rem = exports.c = exports.state = exports.block = exports.center = exports.font = exports.isDark = exports.italic = exports.bold = exports.max = exports.min = void 0;
const util_js_1 = require("./util.js");
const galhui_js_1 = require("./galhui.js");
const dic_js_1 = require("./dic.js");
const css_js_1 = require("galho/css.js");
const array_js_1 = require("./array.js");
const min = (size) => `@media (min-width: ${size}px)`;
exports.min = min;
const max = (size) => `@media (max-width: ${size}px)`;
exports.max = max;
const bold = (v) => v ? (0, util_js_1.isB)(v) ? "bold" : v : null;
exports.bold = bold;
const italic = (v) => v ? (0, util_js_1.isB)(v) ? "italic" : v : null;
exports.italic = italic;
function isDark() {
    return matchMedia && matchMedia('(prefers-color-scheme: dark)').matches;
}
exports.isDark = isDark;
function font(v) {
    return v && ((0, util_js_1.isN)(v) ?
        { fontSize: v + "rem" } :
        v.f ?
            { font: `${(0, util_js_1.toStr)((0, exports.italic)(v.i))} ${(0, util_js_1.toStr)((0, exports.bold)(v.b))} ${v.s}rem ${v.f}` } :
            { fontSize: v.s && (v.s + "rem"), fontWeight: (0, exports.bold)(v.b), fontStyle: (0, exports.italic)(v.i) });
}
exports.font = font;
function center() {
    return {
        position: "absolute",
        left: "50%",
        top: "50%",
        transform: "translate(-50%,-50%)"
    };
}
exports.center = center;
const block = (v) => v && (0, dic_js_1.filter)({
    color: v.fg,
    padding: (0, exports.spc)(v.pad),
    margin: (0, exports.spc)(v.mrg),
    borderRadius: (0, exports.spc)(v.rad),
    ...(0, exports.bords)(v.brd),
    background: v.bg,
    ...font(v.f)
});
exports.block = block;
const state = (v) => v && (0, dic_js_1.filter)({
    ...(0, exports.block)(v),
    ":hover": v.h && (0, exports.block)(v.h),
    ":visited": v.v && (0, exports.block)(v.v),
    ":active,:focus": v.on && (0, exports.block)(v.on),
});
exports.state = state;
const c = (...cls) => (0, galhui_js_1.cc)(...cls);
exports.c = c;
const rem = (v) => v + "rem";
exports.rem = rem;
const border = (color, size = 1) => `${size}px solid ${color}`;
exports.border = border;
function tAlign(v) {
    switch (v) {
        case "l" /* left */:
            return "left";
        case "c" /* center */:
            return "center";
        case "r" /* right */:
            return "right";
        case "j" /* justify */:
            return "justify";
    }
}
exports.tAlign = tAlign;
const bord = (b) => b && `${b.w || 1}px ${b.s || "solid"} ${b.c}`;
exports.bord = bord;
const bords = (b) => b &&
    ((0, array_js_1.isA)(b) ? {
        borderTop: (0, exports.bord)(b[0]),
        borderRight: (0, exports.bord)(b[1]),
        borderBottom: (0, exports.bord)((0, util_js_1.def)(b[2], b[0])),
        borderLeft: (0, exports.bord)((0, util_js_1.def)(b[3], b[1]))
    } : { border: (0, exports.bord)(b) });
exports.bords = bords;
const spc = (v, unit = "em") => v == null ? ((0, util_js_1.isN)(v) ? v + unit : v.map(v => v + unit).join(" ")) : null;
exports.spc = spc;
/**horizontal space */
const hs = (v) => (0, util_js_1.isN)(v) ? v : v[1];
exports.hs = hs;
/**vertical space */
const vs = (v) => (0, util_js_1.isN)(v) ? v : v[0];
exports.vs = vs;
const topRadius = (v, unit = "rem") => ({
    borderTopLeftRadius: v + unit,
    borderTopRightRadius: v + unit
});
exports.topRadius = topRadius;
const vpad = (v) => ({
    paddingTop: v,
    paddingBottom: v
});
exports.vpad = vpad;
const vmarg = (v) => ({
    marginTop: v,
    marginBottom: v
});
exports.vmarg = vmarg;
const bottomRadius = (v, unit = "rem") => ({
    borderBottomLeftRadius: v + unit,
    borderBottomRightRadius: v + unit
});
exports.bottomRadius = bottomRadius;
/**back & fore ground */
const bfg = (bg, fg) => ({
    background: bg, color: fg
});
exports.bfg = bfg;
const box = (mrg, pad) => ({
    margin: (0, exports.spc)(mrg), padding: (0, exports.spc)(pad)
});
exports.box = box;
function styleCtx(options, tag = (0, css_js_1.css)({})) {
    let list = [], add = (style) => {
        if ((0, util_js_1.isO)(style))
            (0, css_js_1.css)(style, tag);
        else if (!list.includes(style)) {
            list.push(style);
            (0, css_js_1.css)(style(add), tag);
        }
        return add;
    };
    return (0, util_js_1.ex)(add, options);
}
exports.styleCtx = styleCtx;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzdHlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSx1Q0FBMEQ7QUFDMUQsMkNBQXlDO0FBQ3pDLHFDQUFrQztBQUNsQyx5Q0FBOEQ7QUFFOUQseUNBQWlDO0FBa0IxQixNQUFNLEdBQUcsR0FBRyxDQUFDLElBQWdCLEVBQUUsRUFBRSxDQUFDLHNCQUFzQixJQUFJLEtBQUssQ0FBQztBQUE1RCxRQUFBLEdBQUcsT0FBeUQ7QUFDbEUsTUFBTSxHQUFHLEdBQUcsQ0FBQyxJQUFnQixFQUFFLEVBQUUsQ0FBQyxzQkFBc0IsSUFBSSxLQUFLLENBQUM7QUFBNUQsUUFBQSxHQUFHLE9BQXlEO0FBQ2xFLE1BQU0sSUFBSSxHQUFHLENBQUMsQ0FBNkIsRUFBTyxFQUFFLENBQ3pELENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBQSxhQUFHLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7QUFEcEIsUUFBQSxJQUFJLFFBQ2dCO0FBQzFCLE1BQU0sTUFBTSxHQUFHLENBQUMsQ0FBNEIsRUFBTyxFQUFFLENBQzFELENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBQSxhQUFHLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7QUFEdEIsUUFBQSxNQUFNLFVBQ2dCO0FBRW5DLFNBQWdCLE1BQU07SUFDcEIsT0FBTyxVQUFVLElBQUksVUFBVSxDQUFDLDhCQUE4QixDQUFDLENBQUMsT0FBTyxDQUFBO0FBQ3pFLENBQUM7QUFGRCx3QkFFQztBQUNELFNBQWdCLElBQUksQ0FBQyxDQUFPO0lBQzFCLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBQSxhQUFHLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNuQixFQUFFLFFB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