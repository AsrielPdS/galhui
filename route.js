import { getAll } from "galho";
import { def, isF, isS, z, filter } from "galho/util.js";
export const hash = (s, value) => s.on("click", () => location.hash = value);
export function init(...routeRoot) {
    root = routeRoot;
    window.onhashchange = () => goTo(location.hash);
    current = currentPath = null;
}
export var root, current, currentPath;
const routes = {};
export function add(key, handler) {
    if (isS(key))
        routes[key] = handler;
    else
        for (let k in key)
            routes[k] = key[k];
}
export function set(t) {
    let p = root[0].parent(), i = -1;
    while (p.child(++i).e != root[0].e)
        ;
    for (let e of root)
        e.remove();
    p.place(i, root = filter(t));
}
export function push(...items) {
    z(root).putAfter(items);
    root.push(...items);
}
export function pop(...items) {
    for (let e of items) {
        let index = root.findIndex(t => t.e == e.e);
        if (index != -1) {
            root.splice(index, 1);
        }
        e.remove();
    }
}
var _intercept, defRoute;
export function intercept(v) { _intercept = v; }
export function has(path) {
    return path.split('/', 2)[0] in routes;
}
export function defaultRoute(value) { return value === void 0 ? defRoute : defRoute = value; }
export async function goTo(path) {
    if (path[0] == '#')
        path = path.slice(1);
    _intercept && (path = def(_intercept(path), path));
    has(path) || (console.warn(`path '${path}' not found.`), path = defRoute || "");
    let keys = path.split('/'), newPath = keys.shift();
    if (newPath != currentPath) {
        current = null;
        let route = routes[newPath];
        if (!route)
            throw 404;
        let dt = isF(route) ? await route(...keys) : route;
        if (dt && isF(dt[1])) {
            current = dt[1];
            dt = dt[0];
        }
        if (dt)
            set(dt);
        currentPath = newPath;
    }
    history.replaceState(null, null, "#" + path /*`#${}?${dicToQString(params)}`*/);
    getAll("a.on").do(e => e.c("on", false));
    getAll(`a[href="#${path}"]`).do(e => e.c("on"));
    current?.(...keys);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJyb3V0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFLLE1BQU0sT0FBTyxDQUFDO0FBQ2xDLE9BQU8sRUFBTyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBYSxDQUFDLEVBQVUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWpGLE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBRyxDQUFDLENBQUksRUFBRSxLQUFVLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDLENBQUM7QUFDckYsTUFBTSxVQUFVLElBQUksQ0FBQyxHQUFHLFNBQWM7SUFDcEMsSUFBSSxHQUFHLFNBQVMsQ0FBQztJQUNqQixNQUFNLENBQUMsWUFBWSxHQUFHLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDaEQsT0FBTyxHQUFHLFdBQVcsR0FBRyxJQUFJLENBQUM7QUFDL0IsQ0FBQztBQUlELE1BQU0sQ0FBQyxJQUFJLElBQVMsRUFBRSxPQUFlLEVBQUUsV0FBZ0IsQ0FBQztBQUN4RCxNQUFNLE1BQU0sR0FBK0IsRUFBRSxDQUFDO0FBRzlDLE1BQU0sVUFBVSxHQUFHLENBQUMsR0FBd0IsRUFBRSxPQUFlO0lBQzNELElBQUksR0FBRyxDQUFDLEdBQUcsQ0FBQztRQUNWLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxPQUFPLENBQUM7O1FBQ25CLEtBQUssSUFBSSxDQUFDLElBQUksR0FBRztZQUNwQixNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3ZCLENBQUM7QUFFRCxNQUFNLFVBQVUsR0FBRyxDQUFDLENBQWlCO0lBQ25DLElBQUksQ0FBQyxHQUFHLElBQUksQ0FB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