import { getAll } from "galho";
import { def, isF, isS, z } from "galho/util.js";
export const hash = (s, value) => s.on("click", () => location.hash = value);
export function init(...routeRoot) {
    root = routeRoot;
    window.onhashchange = () => goTo(location.hash);
    current = currentPath = null;
}
export var root, current, currentPath;
const routes = {};
export function add(key, handler) {
    if (isS(key))
        routes[key] = handler;
    else
        for (let k in key)
            routes[k] = key[k];
}
export function set(t) {
    let p = root[0].parent(), i = -1;
    while (p.child(++i).e != root[0].e)
        ;
    for (let e of root)
        e.remove();
    p.place(i, root = t);
}
export function push(...items) {
    z(root).putAfter(items);
    root.push(...items);
}
export function pop(...items) {
    for (let e of items) {
        let index = root.findIndex(t => t.e == e.e);
        if (index != -1) {
            root.splice(index, 1);
        }
        e.remove();
    }
}
var _intercept, defRoute;
export function intercept(v) { _intercept = v; }
export function has(path) {
    return path.split('/', 2)[0] in routes;
}
export function defaultRoute(value) { return value === void 0 ? defRoute : defRoute = value; }
export async function goTo(path) {
    if (path[0] == '#')
        path = path.slice(1);
    _intercept && (path = def(_intercept(path), path));
    has(path) || (path = defRoute || "");
    let keys = path.split('/'), newPath = keys.shift();
    if (newPath != currentPath) {
        current = null;
        let route = routes[newPath];
        if (!route)
            throw 404;
        let dt = isF(route) ? await route(...keys) : route;
        if (dt && isF(dt[1])) {
            current = dt[1];
            dt = dt[0];
        }
        currentPath = newPath;
        if (dt)
            set(dt);
    }
    history.replaceState(null, null, "#" + path /*`#${}?${dicToQString(params)}`*/);
    getAll("a.on").do(e => e.c("on", false));
    getAll(`a[href="#${path}"]`).do(e => e.c("on"));
    current?.(...keys);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJyb3V0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFLLE1BQU0sT0FBTyxDQUFDO0FBQ2xDLE9BQU8sRUFBTyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBYSxDQUFDLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFFekUsTUFBTSxDQUFDLE1BQU0sSUFBSSxHQUFHLENBQUMsQ0FBSSxFQUFFLEtBQVUsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsQ0FBQztBQUNyRixNQUFNLFVBQVUsSUFBSSxDQUFDLEdBQUcsU0FBYztJQUNwQyxJQUFJLEdBQUcsU0FBUyxDQUFDO0lBQ2pCLE1BQU0sQ0FBQyxZQUFZLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNoRCxPQUFPLEdBQUcsV0FBVyxHQUFHLElBQUksQ0FBQztBQUMvQixDQUFDO0FBSUQsTUFBTSxDQUFDLElBQUksSUFBUyxFQUFFLE9BQWUsRUFBRSxXQUFnQixDQUFDO0FBQ3hELE1BQU0sTUFBTSxHQUErQixFQUFFLENBQUM7QUFHOUMsTUFBTSxVQUFVLEdBQUcsQ0FBQyxHQUF3QixFQUFFLE9BQWU7SUFDM0QsSUFBSSxHQUFHLENBQUMsR0FBRyxDQUFDO1FBQ1YsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLE9BQU8sQ0FBQzs7UUFDbkIsS0FBSyxJQUFJLENBQUMsSUFBSSxHQUFHO1lBQ3BCLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdkIsQ0FBQztBQUVELE1BQU0sVUFBVSxHQUFHLENBQUMsQ0FBTTtJQUN4QixJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFD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