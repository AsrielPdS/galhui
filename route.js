"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tryGoTo = exports.goTo = exports.setDefault = exports.has = exports.intercept = exports.pop = exports.push = exports.set = exports.add = exports.currentPath = exports.current = exports.root = exports.init = exports.hash = void 0;
const galho_1 = require("galho");
const array_js_1 = require("./array.js");
const util_js_1 = require("./util.js");
const hash = (s, value) => s.on("click", () => location.hash = value);
exports.hash = hash;
function init(...routeRoot) {
    exports.root = routeRoot;
    window.onhashchange = () => {
        tryGoTo(location.hash);
    };
    exports.current = exports.currentPath = null;
}
exports.init = init;
const routes = {};
function add(key, handler) {
    if ((0, util_js_1.isS)(key))
        routes[key] = handler;
    else
        for (let k in key)
            routes[k] = key[k];
}
exports.add = add;
function set(t) {
    let p = exports.root[0].parent(), i = -1;
    while (p.child(++i).e != exports.root[0].e)
        ;
    for (let e of exports.root)
        e.remove();
    p.place(i, exports.root = t);
}
exports.set = set;
function push(...items) {
    (0, array_js_1.z)(exports.root).putAfter(items);
    exports.root.push(...items);
}
exports.push = push;
function pop(...items) {
    for (let e of items) {
        let index = exports.root.findIndex(t => t.e == e.e);
        if (index != -1) {
            exports.root.splice(index, 1);
        }
        e.remove();
    }
}
exports.pop = pop;
var _intercept, defRoute;
function intercept(v) { _intercept = v; }
exports.intercept = intercept;
function has(path) {
    return path.slice(1).split('/')[0] in routes;
}
exports.has = has;
function setDefault(value) { defRoute = value; }
exports.setDefault = setDefault;
async function goTo(path) {
    if (path[0] == '#')
        path = path.slice(1);
    _intercept && (path = (0, util_js_1.def)(_intercept(path), path));
    let keys = path.split('/'), newPath = keys.shift();
    if (newPath != exports.currentPath) {
        exports.current = null;
        let route = routes[newPath];
        let dt = (0, util_js_1.isF)(route) ? await route(...keys) : route;
        if (dt && (0, util_js_1.isF)(dt[1])) {
            exports.current = dt[1];
            dt = dt[0];
        }
        exports.currentPath = newPath;
        if (dt)
            set(dt);
    }
    history.replaceState(null, null, "#" + path /*`#${}?${dicToQString(params)}`*/);
    (0, galho_1.getAll)("a[current]").do(e => e.attr("current", false));
    (0, galho_1.getAll)(`a[href="#${path}"]`).do(e => e.attr("current", true));
    (0, exports.current)?.(...keys);
}
exports.goTo = goTo;
function tryGoTo(path) {
    return goTo(has(path) ? path : defRoute || "");
}
exports.tryGoTo = tryGoTo;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJyb3V0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxpQ0FBa0M7QUFDbEMseUNBQStCO0FBRS9CLHVDQUFxRDtBQUU5QyxNQUFNLElBQUksR0FBRyxDQUFDLENBQUksRUFBRSxLQUFVLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDLENBQUM7QUFBeEUsUUFBQSxJQUFJLFFBQW9FO0FBQ3JGLFNBQWdCLElBQUksQ0FBQyxHQUFHLFNBQWM7SUFDcEMsWUFBSSxHQUFHLFNBQVMsQ0FBQztJQUNqQixNQUFNLENBQUMsWUFBWSxHQUFHLEdBQUcsRUFBRTtRQUN6QixPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3pCLENBQUMsQ0FBQztJQUNGLGVBQU8sR0FBRyxtQkFBVyxHQUFHLElBQUksQ0FBQztBQUMvQixDQUFDO0FBTkQsb0JBTUM7QUFLRCxNQUFNLE1BQU0sR0FBK0IsRUFBRSxDQUFDO0FBRzlDLFNBQWdCLEdBQUcsQ0FBQyxHQUF3QixFQUFFLE9BQWU7SUFDM0QsSUFBSSxJQUFBLGFBQUcsRUFBQyxHQUFHLENBQUM7UUFDVixNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDOztRQUNuQixLQUFLLElBQUksQ0FBQyxJQUFJLEdBQUc7WUFDcEIsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN2QixDQUFDO0FBTEQsa0JBS0M7QUFFRCxTQUFnQixHQUFHLENBQUMsQ0FBTTtJQUN4QixJQUFJLENBQUMsR0FBRyxZQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2pDLE9BQU8sQ0FBQyxDQUFDLEtBQUssQ0FBQyxF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