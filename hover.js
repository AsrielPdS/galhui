"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tip = exports.ctx = exports.popup = exports.fluid = exports.error = exports.ok = exports.yesNo = exports.okCancel = exports.headBody = exports.fromPanel = exports.addClose = exports.mapButtons = exports.closeModal = exports.openBody = exports.mdOpen = exports.openModal = exports.modalBody = exports.modal = void 0;
const galho_1 = require("galho");
const util_js_1 = require("galho/util.js");
const galhui_js_1 = require("./galhui.js");
const util_js_2 = require("./util.js");
//TODO remover valid
function modal(i = {}) {
    let resolve, p = (0, util_js_1.assign)(new Promise(r => resolve = r), i);
    p.cb = resolve;
    return p;
}
exports.modal = modal;
function modalBody(md, bd, actions, i = {}) {
    md.body = (0, galho_1.g)("form", (0, galho_1.cl)("_ modal panel", i.cls), [
        (0, galho_1.wrap)(bd, "bd"),
        (0, util_js_1.t)(i.close) && (0, galhui_js_1.close)(() => closeModal(md)),
        actions && (0, galho_1.div)("ft", actions.map(a => a.on('click', e => { e.preventDefault(); closeModal(md, a.d()); })))
    ]).on('keydown', (e) => {
        if (e.key == "Escape") {
            (0, galho_1.clearEvent)(e);
            closeModal(md);
        }
    });
    return md;
}
exports.modalBody = modalBody;
function openModal(md) {
    if (!md.area) {
        md.area = (0, galho_1.div)((0, galhui_js_1.hc)("mda" /* modalArea */), md.body).addTo(galhui_js_1.body);
        md.blur && md.area.prop("tabIndex", 0).on("focus", () => closeModal(md));
    }
    return md;
}
exports.openModal = openModal;
function mdOpen(modal, blur) {
    let t = (0, galho_1.div)((0, galhui_js_1.hc)("mda" /* modalArea */), modal).addTo(galhui_js_1.body);
    blur && (0, galho_1.onfocusout)(modal, () => t.remove());
    return t;
}
exports.mdOpen = mdOpen;
/**define a body and show modal */
function openBody(md, bd, actions, i) {
    return openModal(modalBody(md, bd, actions, i));
}
exports.openBody = openBody;
async function closeModal(md, v) {
    if (md.area && (!md.valid || await md.valid(v))) {
        md.area.remove();
        md.cb(v);
        md.area = null;
    }
}
exports.closeModal = closeModal;
function mapButtons(md) {
    md.body.child(".ft").childs('[type="button"],[type="submit"]')
        .eachS(bt => bt.on("click", e => { e.preventDefault(); closeModal(md, bt.d()); }));
    return md;
}
exports.mapButtons = mapButtons;
function addClose(md) {
    md.body.add((0, galhui_js_1.close)(() => closeModal(md)));
    return md;
}
exports.addClose = addClose;
function fromPanel(panel, i = {}) {
    let md = modal(i);
    md.body = (0, galho_1.g)(panel, "_ modal panel");
    return openModal(mapButtons(md));
}
exports.fromPanel = fromPanel;
const headBody = (i, title, bd) => [
    (0, galho_1.div)("hd", [(0, galhui_js_1.icon)(i), title]),
    (0, galho_1.wrap)(bd, "bd"),
];
exports.headBody = headBody;
function okCancel(body, valid) {
    return openBody(modal({ valid: valid && (v => !v || valid()) }), body, [(0, galhui_js_1.confirm)().d(true), (0, galhui_js_1.cancel)()]);
}
exports.okCancel = okCancel;
function yesNo(body, valid) {
    return openBody(modal({ valid: valid && (v => !v || valid()) }), body, [(0, galhui_js_1.positive)(null, galhui_js_1.w.yes).d(true), (0, galhui_js_1.negative)(null, galhui_js_1.w.no)]);
}
exports.yesNo = yesNo;
function ok(msg) {
    return openBody(modal(), msg, [(0, galhui_js_1.confirm)()]);
}
exports.ok = ok;
function error(msg) {
    return openBody(modal(), msg, [(0, galhui_js_1.confirm)()], { cls: "_e" /* error */ });
}
exports.error = error;
function fluid({ x, y, right: r, bottom: b }, menu, [o, side, main]) {
    /*m:main,s:side */
    let { innerHeight: wh, innerWidth: ww } = window, { width: mw, height: mh } = menu.rect(), h = o == "h", e = galhui_js_1.$.rem * .4, [ws, wm, ms, mm, s0, m0, s1, m1] = h ? [wh, ww, mh, mw, y, x, b, r] : [ww, wh, mw, mh, x, y, r, b];
    main || (main = (m0 + (m1 - m0) / 2) > (wm / 2) ? "s" : "e");
    menu
        .css({
        ["max" + (h ? "Width" : "Height")]: (main == "e" ? wm - m1 : m0) - e * 2 + "px",
        [h ? "left" : "top"]: (main == "e" ? m1 + e : Math.max(0, m0 - mm) - e) + "px",
        [h ? "top" : "left"]: Math.max(0, Math.min(ws - ms, side == "s" ? s1 - ms : side == "e" ? s0 : s0 + (s1 - s0) / 2 - ms / 2)) + "px",
    });
}
exports.fluid = fluid;
function popup(div, e, align) {
    let last = (0, galho_1.active)(), ctx = div.prop("tabIndex", 0), 
    // isOut: bool,
    wheelHandler = (e) => (0, galho_1.clearEvent)(e);
    ctx.queryAll('button').on('click', function () { last.valid ? last.focus() : this.blur(); });
    ctx.on({
        focusout: (e) => ctx.contains(e.relatedTarget) || (ctx.remove() && galhui_js_1.body.off("wheel", wheelHandler)),
        keydown(e) {
            if (e.key == "Escape") {
                e.stopPropagation();
                ctx.blur();
            }
        }
    }).addTo(galhui_js_1.body).focus();
    // .css({
    //   left: opts.clientX + 'px',
    //   top: opts.clientY + 'px'
    // })
    (0, util_js_2.anim)(() => (fluid(e(), ctx, align), galhui_js_1.body.contains(ctx)));
    galhui_js_1.body.on("wheel", wheelHandler, { passive: false });
}
exports.popup = popup;
/**context menu */
function ctx(e, data) {
    (0, galho_1.clearEvent)(e);
    popup((0, galho_1.div)("_ menu", (0, galho_1.g)("table", 0, data)), () => new DOMRect(e.clientX, e.clientY, 0, 0), "ve");
}
exports.ctx = ctx;
function tip(root, div, align = "v") {
    div = (0, galho_1.wrap)(div, "_ tip");
    return root?.on({
        mouseenter() {
            galhui_js_1.body.add(div);
            (0, util_js_2.anim)(() => galhui_js_1.body.contains(root) ?
                galhui_js_1.body.contains(div) && fluid(root.rect(), div, align) :
                (div.remove(), false));
        },
        mouseleave() { div.remove(); }
    });
}
exports.tip = tip;
//# sourceMappingURL=data:application/json;base64,