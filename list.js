"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tab = exports.list = exports.kbHandler = exports.kbHTp = exports.crudHandler = exports.defRenderer = void 0;
const galho_1 = require("galho");
const util_js_1 = require("galho/util.js");
const orray_js_1 = require("galho/orray.js");
const galhui_js_1 = require("./galhui.js");
const hover_js_1 = require("./hover.js");
exports.defRenderer = {
    null: () => (0, galho_1.div)(0, (0, galhui_js_1.icon)(galhui_js_1.$.i.null)),
    invalidIcon: () => (0, galhui_js_1.icon)('image-broken'),
    checkboxFmt: "icon",
    html: true,
    interactive: true,
    format: true
};
function crudHandler(e, dt, i) {
    let click = (ev) => orray_js_1.range.add(dt, "on", e.d(), orray_js_1.range.tp(ev.ctrlKey, ev.shiftKey));
    return e.on({
        click,
        dblclick: i.open && (() => i.open(...orray_js_1.range.list(dt, "on"))),
        contextmenu: i.menu && (e => {
            click(e);
            let t = i.menu(...orray_js_1.range.list(dt, "on"));
            t && (0, hover_js_1.ctx)(e, t);
        })
    });
}
exports.crudHandler = crudHandler;
const kbHTp = (dt, dist, { ctrlKey: ctrl, shiftKey: shift }) => shift ? orray_js_1.range.move(dt, "on", dist, orray_js_1.range.tp(ctrl, false)) :
    ctrl ? orray_js_1.range.movePivot(dt, "on", dist) :
        orray_js_1.range.move(dt, "on", dist, 0 /* set */);
exports.kbHTp = kbHTp;
function kbHandler(dt, e, i, noArrows) {
    switch (e.key) {
        case "Delete":
            let t0 = orray_js_1.range.list(dt, "on");
            if (t0.length && i.remove) {
                (async () => {
                    if ((await i.remove(t0)) !== false)
                        for (let i of t0)
                            dt.remove(i);
                })();
            }
            else
                return;
            break;
        case "Home":
            (0, exports.kbHTp)(dt, -orray_js_1.range.pivot(dt, "on"), e);
            break;
        case "End":
            (0, exports.kbHTp)(dt, dt.length - orray_js_1.range.pivot(dt, "on"), e);
            break;
        case "PageDown":
            (0, exports.kbHTp)(dt, 10, e);
            break;
        case "PageUp":
            (0, exports.kbHTp)(dt, -10, e);
            break;
        case "Enter":
            if (i.open) {
                i.open(...orray_js_1.range.list(dt, "on"));
                break;
            }
            else
                return;
        case "ArrowUp":
            if (noArrows)
                return;
            (0, exports.kbHTp)(dt, -1, e);
            break;
        case "ArrowDown":
            if (noArrows)
                return;
            (0, exports.kbHTp)(dt, 1, e);
            break;
        default:
            return;
    }
    return true;
}
exports.kbHandler = kbHandler;
function list(i, data) {
    let dt = (0, orray_js_1.extend)(data, {
        g: i.single ? null : ["on"],
        clear: true, key: i.key
    }), e = (0, util_js_1.t)(i.enum), r = dt.bind((0, galho_1.g)("ol", "_ list"), {
        insert: v => crudHandler((0, galho_1.wrap)(i.item(v), "i").d(v), dt, i),
        tag(s, active, tag) {
            tag == "on" && s.c("crt" /* current */, active).e.scrollIntoView({
                block: "nearest",
                inline: "nearest"
            });
            s.c(tag, active);
        },
        groups(s, on, _, key) { s.c(key, on); }
    });
    return (0, util_js_1.t)(i.kd) ? r.props({
        tabIndex: 0, onkeydown(e) { kbHandler(data, e, i) && (0, galho_1.clearEvent)(e); }
    }) : r;
}
exports.list = list;
const tab = (items, removeble, empty) => (0, galho_1.div)(["ta" /* tab */], [
    items.bind((0, galho_1.div)(["bar" /* menubar */]), {
        tag: (v, a) => v.c("on", a),
        insert: value => (0, galho_1.div)("i", [
            (0, galhui_js_1.icon)(value.icon),
            value.text,
            removeble && (0, galhui_js_1.close)(e => { (0, galho_1.clearEvent)(e); items.remove(value); })
        ]).on('click', () => items.tag("on", value))
    }),
    (0, util_js_1.call)((0, galho_1.div)("bd"), bd => {
        let cb = (v) => {
            bd.attr("id", false);
            if (v) {
                bd.set((0, util_js_1.isF)(v.body) ? (v.body = v.body(v)) : v.body);
                v.focus?.(bd, true);
            }
            else
                bd.set(empty?.());
        };
        items.ontag("on", cb);
        cb(items.tags?.on.v);
    }),
]);
exports.tab = tab;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImxpc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsaUNBQXlEO0FBQ3pELDJDQUFrRTtBQUNsRSw2Q0FBa0Q7QUFDbEQsMkNBQTZEO0FBQzdELHlDQUFpQztBQW1EcEIsUUFBQSxXQUFXLEdBQWtCO0lBQ3hDLElBQUksRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFBLFdBQUcsRUFBQyxDQUFDLEVBQUUsSUFBQSxnQkFBSSxFQUFDLGFBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbEMsV0FBVyxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUEsZ0JBQUksRUFBQyxjQUFjLENBQUM7SUFDdkMsV0FBVyxFQUFFLE1BQU07SUFDbkIsSUFBSSxFQUFFLElBQUk7SUFDVixXQUFXLEVBQUUsSUFBSTtJQUNqQixNQUFNLEVBQUUsSUFBSTtDQUNiLENBQUE7QUFFRCxTQUFnQixXQUFXLENBQUksQ0FBSSxFQUFFLEVBQVEsRUFBRSxDQUFXO0lBQ3hELElBQUksS0FBSyxHQUFHLENBQUMsRUFBYyxFQUFFLEVBQUUsQ0FBQyxnQkFBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxnQkFBSyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQzlGLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUNWLEtBQUs7UUFDTCxRQUFRLEVBQUUsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxnQkFBSyxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUMzRCxXQUFXLEVBQUUsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQzFC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