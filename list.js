"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tab = exports.list = exports.kbHandler = exports.kbHTp = exports.crudHandler = exports.defRenderer = void 0;
const galho_1 = require("galho");
const util_js_1 = require("./util.js");
const orray_1 = require("orray");
const selector_js_1 = require("orray/selector.js");
const galhui_js_1 = require("./galhui.js");
const hover_js_1 = require("./hover.js");
exports.defRenderer = {
    null: () => (0, galho_1.div)(0, galhui_js_1.$.null),
    invalidIcon: () => (0, galhui_js_1.icon)('image-broken'),
    checkboxFmt: "icon",
    html: true,
    interactive: true,
    format: true,
    dateFmt: "d",
    timeFmt: "t",
    numberFmt: "0,0.00"
};
function crudHandler(p, dt, cls, i) {
    let focus = ({ currentTarget: ct, target: t, ctrlKey: ctrl, shiftKey: shift }) => {
        if (ct == t)
            (0, selector_js_1.clear)(dt, "on");
        else
            (0, selector_js_1.add)(dt, "on", (0, galho_1.g)(t).closest('.' + cls).d(), (0, selector_js_1.tp)(ctrl, shift));
    };
    return p.on({
        click: focus,
        dblclick: i.open && (() => i.open(...(0, selector_js_1.list)(dt, "on"))),
        contextmenu: i.menu && ((e) => {
            focus(e);
            let t = i.menu(...(0, selector_js_1.list)(dt, "on"));
            if (t)
                (0, hover_js_1.ctx)(e, t);
        })
    });
}
exports.crudHandler = crudHandler;
const kbHTp = (dt, dist, { ctrlKey: ctrl, shiftKey: shift }) => shift ? (0, selector_js_1.move)(dt, "on", dist, (0, selector_js_1.tp)(ctrl, false)) :
    ctrl ? (0, selector_js_1.movePivot)(dt, "on", dist) :
        (0, selector_js_1.move)(dt, "on", dist, 0 /* set */);
exports.kbHTp = kbHTp;
function kbHandler(dt, e, i) {
    switch (e.key) {
        case "Delete":
            let t = (0, selector_js_1.list)(dt, "on");
            if (t.length && i.remove) {
                (async () => {
                    if ((await i.remove(...t)) !== false)
                        for (let i of t)
                            dt.remove(i);
                })();
            }
            else
                return;
            break;
        case "Home":
            (0, exports.kbHTp)(dt, -(0, selector_js_1.pivot)(dt, "on"), e);
            break;
        case "End":
            (0, exports.kbHTp)(dt, dt.length - (0, selector_js_1.pivot)(dt, "on"), e);
            break;
        case "PageDown":
            (0, exports.kbHTp)(dt, 10, e);
            break;
        case "PageUp":
            (0, exports.kbHTp)(dt, -10, e);
            break;
        case "Enter":
            if (i.open) {
                i.open(...(0, selector_js_1.list)(dt, "on"));
                break;
            }
            else
                return;
        default:
            return;
    }
    return true;
}
exports.kbHandler = kbHandler;
function list(i, data) {
    let dt = (0, orray_1.extend)(data, {
        g: i.single ? null : ["on"],
        clear: true, key: i.key
    }), 
    // opts = i.options,
    e = (0, util_js_1.t)(i.enum);
    return dt.bind(crudHandler((0, galho_1.g)("ol", "_ list"), dt, "i", i), {
        insert: (value, index) => (0, galho_1.div)("i", [
            (0, galho_1.div)(["sd" /* side */], e ? index + 1 : ' ')
                .css('flexBasis', `${galhui_js_1.$.rem * 2.5}px`),
            (0, galho_1.wrap)(i.item(value), "bd")
        ]).d(value),
        tag(s, active) {
            s.cls("crt" /* current */, active).e.scrollIntoView({
                block: "nearest",
                inline: "nearest"
            });
            if (i.single)
                s.cls("on", active);
        },
        groups(s, on, _, key) { s.cls(key, on); }
    });
}
exports.list = list;
const tab = (items, removeble, empty) => (0, galho_1.div)(["ta" /* tab */], [
    items.bind((0, galho_1.div)(["bar" /* menubar */]), {
        tag: (v, a) => v.cls("on", a),
        insert: value => (0, galho_1.div)("i", [
            (0, galhui_js_1.icon)(value.icon),
            value.text,
            removeble && (0, galhui_js_1.close)(e => { (0, galho_1.clearEvent)(e); items.remove(value); })
        ]).on('click', () => items.tag("on", value))
    }),
    (0, util_js_1.call)((0, galho_1.div)("bd"), bd => {
        let cb = (v) => {
            bd.attr("id", false).uncls();
            if (v) {
                bd.set((0, util_js_1.isF)(v.body) ? (v.body = v.body(v)) : v.body);
                v.focus?.(bd, true);
            }
            else
                bd.set(empty?.());
        };
        items.ontag("on", cb);
        cb(items.tags?.["on"]?.value);
    }),
]);
exports.tab = tab;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImxpc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsaUNBQXlEO0FBQ3pELHVDQUF5RDtBQUN6RCxpQ0FBa0M7QUFDbEMsbURBQW9NO0FBQ3BNLDJDQUE2RDtBQUM3RCx5Q0FBaUM7QUFrRHBCLFFBQUEsV0FBVyxHQUFrQjtJQUN4QyxJQUFJLEVBQUUsR0FBRyxFQUFFLENBQUMsSUFBQSxXQUFHLEVBQUMsQ0FBQyxFQUFFLGFBQUMsQ0FBQyxJQUFJLENBQUM7SUFDMUIsV0FBVyxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUEsZ0JBQUksRUFBQyxjQUFjLENBQUM7SUFDdkMsV0FBVyxFQUFFLE1BQU07SUFDbkIsSUFBSSxFQUFFLElBQUk7SUFDVixXQUFXLEVBQUUsSUFBSTtJQUNqQixNQUFNLEVBQUUsSUFBSTtJQUNaLE9BQU8sRUFBRSxHQUFHO0lBQ1osT0FBTyxFQUFFLEdBQUc7SUFDWixTQUFTLEVBQUUsUUFBUTtDQUNwQixDQUFBO0FBSUQsU0FBZ0IsV0FBVyxDQUFJLENBQUksRUFBRSxFQUFRLEVBQUUsR0FBUSxFQUFFLENBQVc7SUFDbEUsSUFDRSxLQUFLLEdBQUcsQ0FBQyxFQUFFLGFBQWEsRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQWMsRUFBRSxFQUFFO1FBQ3ZGLElBQUksRUFBRSxJQUFJLENBQUM7WUFDVCxJQUFBLG1CQUFjLEVBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDOztZQUN0QixJQUFBLGlCQUFZLEVBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFBLFNBQUMsRUFBVSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLElBQUEsZ0JBQWEsRUFBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQztJ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