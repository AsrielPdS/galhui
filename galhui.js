"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.panel = exports.logo = exports.hr = exports.a = exports.img = exports.buttons = exports.confirm = exports.cancel = exports.close = exports.ilink = exports.negative = exports.positive = exports.ibutton = exports.ibt = exports.link = exports.bt = exports.icon = exports.hc = exports.cc = exports.doc = exports.body = exports.sentence = exports.word = exports.w = exports.$ = void 0;
const galho_1 = require("galho");
const util_js_1 = require("./util.js");
/**settings */
exports.$ = {
    // c: "_",
    iconS: 24,
    delay: 500,
    rem: 14
};
/**words */
exports.w = {};
function word(key) { return key; }
exports.word = word;
function sentence(format) {
    const exp = /\{\w+\}/;
    format.replace(exp, (v) => exports.w[v.slice(1, v.length - 1)]);
}
exports.sentence = sentence;
exports.body = new galho_1.S(document.body);
exports.doc = new galho_1.S(document);
/**css class */
const cc = (...cls) => `._.${cls.join('-')}`;
exports.cc = cc;
/**html class */
const hc = (...cls) => ['_', cls.join('-')];
exports.hc = hc;
function icon(d, s) {
    if (d) {
        if ((0, util_js_1.isS)(d))
            d = { d };
        else if ((0, galho_1.isE)(d))
            return d.cls((0, galho_1.cl)("c" /* icon */, s));
        return (0, galho_1.svg)('svg', {
            fill: d.c || "currentColor",
            viewBox: `0 0 ${exports.$.iconS} ${exports.$.iconS}`,
        }, (0, galho_1.svg)('path', { d: d.d })).cls((0, galho_1.cl)("c" /* icon */, s));
    }
}
exports.icon = icon;
const bt = (text, click, type = "button") => (0, galho_1.g)("button", "_ bt", text).prop("type", type).on("click", click);
exports.bt = bt;
const link = (text, href) => (0, galho_1.g)("a", ["_", "lk" /* link */], text).prop("href", href);
exports.link = link;
/** button with icon */
const ibt = (i, text, click, type = "button") => (0, galho_1.g)("button", "_ bt", [icon(i), text])
    .prop("type", type)
    .cls("c" /* icon */, !text).on("click", click);
exports.ibt = ibt;
/** @deprecated */
exports.ibutton = exports.ibt;
const positive = (i, text, click, type) => (0, exports.ibt)(i, text, click, type).cls("_a" /* accept */);
exports.positive = positive;
const negative = (i, text, click, type) => (0, exports.ibt)(i, text, click, type).cls("_e" /* error */);
exports.negative = negative;
/** link with icon */
const ilink = (i, text, href) => (0, galho_1.g)("a", "lk" /* link */, [icon(i), text]).prop("href", href);
exports.ilink = ilink;
/**close button */
const close = (click) => (0, galho_1.div)((0, exports.hc)("cl" /* close */), icon(exports.$.i.close)).on("click", click);
exports.close = close;
/**cancel button */
const cancel = (click) => (0, exports.negative)(exports.$.i.cancel, exports.w.cancel, click);
exports.cancel = cancel;
/**confirm button */
const confirm = (click) => (0, exports.positive)("confirm", exports.w.confirm, click, "submit");
exports.confirm = confirm;
const buttons = (...buttons) => (0, galho_1.div)("bs" /* buttons */, buttons);
exports.buttons = buttons;
const img = (src, cls) => (0, galho_1.g)("img", cls).prop("src", src);
exports.img = img;
const a = (href, content, cls) => (0, galho_1.g)("a", cls, content).prop("href", href);
exports.a = a;
const hr = (cls) => (0, galho_1.g)("hr", cls);
exports.hr = hr;
function logo(v) {
    if (v)
        if ((0, util_js_1.isS)(v)) {
            switch (v[0]) {
                case ".":
                case "/":
                    return (0, exports.img)(v).cls("c" /* icon */);
                case "<":
                    return (0, galho_1.toSVG)(v).cls("c" /* icon */);
            }
        }
        else
            return icon(v);
}
exports.logo = logo;
const panel = (hd, bd, ft) => (0, galho_1.div)("_ panel", [
    hd && (0, galho_1.wrap)(hd, "hd"),
    (0, galho_1.wrap)(bd, "bd"),
    ft && (0, galho_1.wrap)(ft, "ft")
]);
exports.panel = panel;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FsaHVpLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZ2FsaHVpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLGlDQUFpRjtBQUVqRix1Q0FBaUQ7QUF1R2pELGNBQWM7QUFDRCxRQUFBLENBQUMsR0FBcUI7SUFDakMsVUFBVTtJQUNWLEtBQUssRUFBRSxFQUFFO0lBQ1QsS0FBSyxFQUFFLEdBQUc7SUFDVixHQUFHLEVBQUUsRUFBRTtDQUNSLENBQUE7QUFDRCxXQUFXO0FBQ0UsUUFBQSxDQUFDLEdBQWtCLEVBQUUsQ0FBQTtBQUlsQyxTQUFnQixJQUFJLENBQUMsR0FBUSxJQUFJLE9BQU8sR0FBRyxDQUFDLENBQUMsQ0FBQztBQUE5QyxvQkFBOEM7QUFDOUMsU0FBZ0IsUUFBUSxDQUFDLE1BQVc7SUFDbEMsTUFBTSxHQUFHLEdBQUcsU0FBUyxDQUFDO0lBQ3RCLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxTQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDMUQsQ0FBQztBQUhELDRCQUdDO0FBbUNZLFFBQUEsSUFBSSxHQUFHLElBQUksU0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUM1QixRQUFBLEdBQUcsR0FBRyxJQUFJLFNBQUMsQ0FBQyxRQUFlLENBQUMsQ0FBQztBQUUxQyxlQUFlO0FBQ1IsTUFBTSxFQUFFLEdBQUcsQ0FBQyxHQUFHLEdBQVUsRUFBRSxFQUFFLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUM7QUFBOUMsUUFBQSxFQUFFLE1BQTRDO0FBQzNELGdCQUFnQjtBQUNULE1BQU0sRUFBRSxHQUFHLENBQUMsR0FBRyxHQUFVLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FB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