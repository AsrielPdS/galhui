import { cl, div, g, isE, S, svg, toSVG, wrap } from "galho";
import { call, isN, isP, isS } from "galho/util.js";
import { uuid } from "./util.js";
/**settings */
export const $ = {
    // c: "_",
    delay: 500,
    rem: 14
};
/**words */
export const w = {};
export function word(key) { return key; }
export function sentence(format) {
    const exp = /\{\w+\}/;
    format.replace(exp, (v) => w[v.slice(1, v.length - 1)]);
}
export const body = new S(document.body);
export const doc = new S(document);
/**css class */
export const cc = (...cls) => `._.${cls.join('-')}`;
/**html class */
export const hc = (...cls) => ['_', cls.join('-')];
export function icon(d, s) {
    if (d) {
        if (isS(d))
            d = { d };
        else if (isE(d))
            return d.c(cl("c" /* icon */, s));
        return svg('svg', {
            fill: d.c || "currentColor",
            viewBox: $.is || "0 0 24 24",
        }, svg('path', { d: d.d })).c(cl("c" /* icon */, s));
    }
}
export const bt = (text, click, type = "button") => g("button", "_ bt", text).p("type", type).on("click", click);
export const link = (text, href) => g("a", ["_", "lk" /* link */], text).p("href", href);
/** button with icon */
export const ibt = (i, text, click, type = "button") => g("button", "_ bt", [icon(i), text])
    .p("type", type)
    .c("c" /* icon */, !text).on("click", click);
/** @deprecated */
export const ibutton = ibt;
export const positive = (i, text, click, type) => ibt(i, text, click, type).c("_a" /* accept */);
export const negative = (i, text, click, type) => ibt(i, text, click, type).c("_e" /* error */);
/** link with icon */
export const ilink = (i, text, href) => g("a", "lk" /* link */, [icon(i), text]).p("href", href);
/**close button */
export const close = (click) => div(hc("cl" /* close */), icon($.i.close)).on("click", click);
/**cancel button */
export const cancel = (click) => negative($.i.cancel, w.cancel, click);
/**confirm button */
export const confirm = (click) => positive($.i.check, w.confirm, click, "submit");
export const buttons = (...buttons) => div("bs" /* buttons */, buttons);
export const img = (src, cls) => g("img", cls).p("src", src);
export const a = (href, content, cls) => g("a", cls, content).p("href", href);
export const hr = (cls) => g("hr", cls);
export function logo(v) {
    if (v)
        if (isS(v)) {
            switch (v[0]) {
                case ".":
                case "/":
                    return img(v).c("c" /* icon */);
                case "<":
                    return toSVG(v).c("c" /* icon */);
            }
        }
        else
            return icon(v);
}
export const panel = (hd, bd, ft) => g("section", "_ panel", [
    hd && wrap(hd, "hd", "header"),
    wrap(bd, "bd"),
    ft && wrap(ft, "ft")
]);
export function fluid({ x, y, right: r, bottom: b }, menu, [o, side, main]) {
    /*m:main,s:side */
    let { innerHeight: wh, innerWidth: ww } = window, { width: mw, height: mh } = menu.rect, h = o == "h", e = $.rem * .4, [ws, wm, ms, mm, s0, m0, s1, m1] = h ? [wh, ww, mh, mw, y, x, b, r] : [ww, wh, mw, mh, x, y, r, b];
    main ||= (m0 + (m1 - m0) / 2) > (wm / 2) ? "s" : "e";
    menu
        .css({
        ["max" + (h ? "Width" : "Height")]: (main == "e" ? wm - m1 : m0) - e * 2 + "px",
        [h ? "left" : "top"]: (main == "e" ? m1 + e : Math.max(0, m0 - mm) - e) + "px",
        [h ? "top" : "left"]: Math.max(0, Math.min(ws - ms, side == "s" ? s1 - ms : side == "e" ? s0 : s0 + (s1 - s0) / 2 - ms / 2)) + "px",
    });
}
export function menu(items) { return div("_ menu", g("table", 0, items)); }
/**menu item */
export const menuitem = (i, text, action, side, disabled) => g("tr", "i" + (disabled ? " " + "ds" /* disabled */ : ""), [
    g("td", 0, icon(i)),
    g("td", 0, text),
    g("td", "sd" /* side */, side),
    g("td")
]).on("click", !disabled && action);
/**checkbox */
export function menucb(checked, text, toggle, id = uuid(4), disabled) {
    let input = g("input", { id, checked, disabled, indeterminate: checked == null, type: "checkbox" });
    toggle && input.on("input", () => toggle.call(input, input.e.checked));
    return g("tr", ["i", disabled && "ds" /* disabled */], [
        g("td", 0, input.on("click", e => e.stopPropagation())),
        g("td", 0, g("label", 0, text).p("htmlFor", id)),
        g("td"), g("td")
    ]);
}
export const menuwait = (callback) => call(g("tr", 0, g("td", 0, wait(1 /* out */)).p("colSpan", 4)), tr => waiter(tr, callback));
export const submenu = (i, text, items) => call(g("tr", "i", [
    g("td", 0, icon(i)),
    g("td", 0, text),
    g("td"),
    g("td", 0, icon("menuR"))
]), e => {
    let mn;
    e.on("click", () => {
        e.tcls("on" /* on */).is('.' + "on" /* on */) ?
            fluid(e.rect, (mn ||= g("table", "menu" /* menu */, items)).addTo(e), "h") :
            mn.remove();
    });
});
export const menusep = () => g("tr", "_ hr");
/** */
export const menubar = (...items) => div("_ bar", items);
/** */
export const right = () => div("r" /* right */);
export const mbitem = (i, text, action) => g("button", "i", [icon(i), text]).on("click", action);
/**menubar separator */
export const mbsep = () => g("hr");
/**menubar checkbox */
export function barcb(checked, text, toggle, disabled) {
    let input = g("input", { checked, disabled, indeterminate: checked == null, type: "checkbox" });
    toggle && input.on("input", () => toggle.call(input, input.e.checked));
    return g("label", ["i", disabled && "ds" /* disabled */], [input, text]);
}
/**place holder */
export function ph(type = 1 /* out */) {
    switch (type) {
        case 0 /* inline */:
        case 1 /* out */:
            return div("ld" /* loading */, [
            //icon({ /*s: size, */d: `loading ${C.centered}` }),
            //icon({ /*s: size, */d: `loading ${C.itemA} ${C.centered}` }),
            ]);
    }
}
export function waiter(element, cb) {
    cb && (isP(cb) ? cb : cb?.()).then(t => {
        if (t instanceof S) {
            t.c(Array.from(element.e.classList).slice(1));
            t.attr("style", (t.attr("style") || "") +
                (element.attr("style") || ""));
        }
        element.replace(t);
    });
}
export function wait(type, body) {
    if (!isN(type)) {
        body = type;
        type = 0 /* inline */;
    }
    let loader = ph(type);
    waiter(loader, body);
    return loader;
}
export function busy(container) {
    let e = wait(), t = setTimeout(() => {
        container.add(e);
    }, 750);
    return () => {
        e.remove();
        clearTimeout(t);
    };
}
//# sourceMappingURL=data:application/json;base64,