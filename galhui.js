"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.panel = exports.logo = exports.hr = exports.a = exports.img = exports.buttons = exports.confirm = exports.cancel = exports.close = exports.ilink = exports.negative = exports.positive = exports.ibutton = exports.ibt = exports.link = exports.bt = exports.icon = exports.hc = exports.cc = exports.doc = exports.body = exports.sentence = exports.word = exports.w = exports.$ = void 0;
const galho_1 = require("galho");
const util_js_1 = require("galho/util.js");
/**settings */
exports.$ = {
    // c: "_",
    delay: 500,
    rem: 14
};
/**words */
exports.w = {};
function word(key) { return key; }
exports.word = word;
function sentence(format) {
    const exp = /\{\w+\}/;
    format.replace(exp, (v) => exports.w[v.slice(1, v.length - 1)]);
}
exports.sentence = sentence;
exports.body = new galho_1.S(document.body);
exports.doc = new galho_1.S(document);
/**css class */
const cc = (...cls) => `._.${cls.join('-')}`;
exports.cc = cc;
/**html class */
const hc = (...cls) => ['_', cls.join('-')];
exports.hc = hc;
function icon(d, s) {
    if (d) {
        if ((0, util_js_1.isS)(d))
            d = { d };
        else if ((0, galho_1.isE)(d))
            return d.c((0, galho_1.cl)("c" /* icon */, s));
        return (0, galho_1.svg)('svg', {
            fill: d.c || "currentColor",
            viewBox: exports.$.is || "0 0 24 24",
        }, (0, galho_1.svg)('path', { d: d.d })).c((0, galho_1.cl)("c" /* icon */, s));
    }
}
exports.icon = icon;
const bt = (text, click, type = "button") => (0, galho_1.g)("button", "_ bt", text).prop("type", type).on("click", click);
exports.bt = bt;
const link = (text, href) => (0, galho_1.g)("a", ["_", "lk" /* link */], text).prop("href", href);
exports.link = link;
/** button with icon */
const ibt = (i, text, click, type = "button") => (0, galho_1.g)("button", "_ bt", [icon(i), text])
    .prop("type", type)
    .c("c" /* icon */, !text).on("click", click);
exports.ibt = ibt;
/** @deprecated */
exports.ibutton = exports.ibt;
const positive = (i, text, click, type) => (0, exports.ibt)(i, text, click, type).c("_a" /* accept */);
exports.positive = positive;
const negative = (i, text, click, type) => (0, exports.ibt)(i, text, click, type).c("_e" /* error */);
exports.negative = negative;
/** link with icon */
const ilink = (i, text, href) => (0, galho_1.g)("a", "lk" /* link */, [icon(i), text]).prop("href", href);
exports.ilink = ilink;
/**close button */
const close = (click) => (0, galho_1.div)((0, exports.hc)("cl" /* close */), icon(exports.$.i.close)).on("click", click);
exports.close = close;
/**cancel button */
const cancel = (click) => (0, exports.negative)(exports.$.i.cancel, exports.w.cancel, click);
exports.cancel = cancel;
/**confirm button */
const confirm = (click) => (0, exports.positive)("confirm", exports.w.confirm, click, "submit");
exports.confirm = confirm;
const buttons = (...buttons) => (0, galho_1.div)("bs" /* buttons */, buttons);
exports.buttons = buttons;
const img = (src, cls) => (0, galho_1.g)("img", cls).prop("src", src);
exports.img = img;
const a = (href, content, cls) => (0, galho_1.g)("a", cls, content).prop("href", href);
exports.a = a;
const hr = (cls) => (0, galho_1.g)("hr", cls);
exports.hr = hr;
function logo(v) {
    if (v)
        if ((0, util_js_1.isS)(v)) {
            switch (v[0]) {
                case ".":
                case "/":
                    return (0, exports.img)(v).c("c" /* icon */);
                case "<":
                    return (0, galho_1.toSVG)(v).c("c" /* icon */);
            }
        }
        else
            return icon(v);
}
exports.logo = logo;
const panel = (hd, bd, ft) => (0, galho_1.div)("_ panel", [
    hd && (0, galho_1.wrap)(hd, "hd"),
    (0, galho_1.wrap)(bd, "bd"),
    ft && (0, galho_1.wrap)(ft, "ft")
]);
exports.panel = panel;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FsaHVpLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZ2FsaHVpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLGlDQUFpRjtBQUNqRiwyQ0FBNEU7QUFvRzVFLGNBQWM7QUFDRCxRQUFBLENBQUMsR0FBcUI7SUFDakMsVUFBVTtJQUNWLEtBQUssRUFBRSxHQUFHO0lBQ1YsR0FBRyxFQUFFLEVBQUU7Q0FDUixDQUFBO0FBQ0QsV0FBVztBQUNFLFFBQUEsQ0FBQyxHQUFrQixFQUFFLENBQUE7QUFJbEMsU0FBZ0IsSUFBSSxDQUFDLEdBQVEsSUFBSSxPQUFPLEdBQUcsQ0FBQyxDQUFDLENBQUM7QUFBOUMsb0JBQThDO0FBQzlDLFNBQWdCLFFBQVEsQ0FBQyxNQUFXO0lBQ2xDLE1BQU0sR0FBRyxHQUFHLFNBQVMsQ0FBQztJQUN0QixNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsU0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzFELENBQUM7QUFIRCw0QkFHQztBQXNDWSxRQUFBLElBQUksR0FBRyxJQUFJLFNBQUMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDNUIsUUFBQSxHQUFHLEdBQUcsSUFBSSxTQUFDLENBQUMsUUFBZSxDQUFDLENBQUM7QUFFMUMsZUFBZTtBQUNSLE1BQU0sRUFBRSxHQUFHLENBQUMsR0FBRyxHQUFVLEVBQUUsRUFBRSxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDO0FBQTlDLFFBQUEsRUFBRSxNQUE0QztBQUMzRCxnQkFBZ0I7QUFDVCxNQUFNLEVBQUUsR0FBRyxDQUFDLEdBQUcsR0FBVSxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FB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