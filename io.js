"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.accordion = exports.hidden = exports.Output = exports.tip = exports.errorMessage = exports.message = exports.keyVal = exports.output = exports.label = exports.Pagging = exports.lever = exports.search = exports.checkbox = exports.textarea = exports.input = void 0;
const galho_1 = require("galho");
const inutil_1 = require("inutil");
const orray_1 = require("orray");
const dropdown_js_1 = require("./dropdown.js");
const galhui_js_1 = require("./galhui.js");
const menu_js_1 = require("./menu.js");
const input = (type, name, ph, input) => (0, galho_1.g)("input", { type, name, placeholder: ph }).cls((0, galhui_js_1.hc)("in" /* input */)).on("input", input);
exports.input = input;
const textarea = (name, ph, input) => (0, galho_1.g)("textarea", { name, placeholder: ph }).cls((0, galhui_js_1.hc)("in" /* input */)).on("input", input && (function () { input(this.value); }));
exports.textarea = textarea;
const checkbox = (label, input) => (0, galho_1.g)("label", (0, galhui_js_1.hc)("cb" /* checkbox */), [(0, galho_1.g)("input", { type: "checkbox" }).on("input", input && (function () { input(this.checked); })), label]);
exports.checkbox = checkbox;
function search(input) {
    let t = (0, galho_1.g)("input", { type: "search", placeholder: galhui_js_1.w.search }), i = (0, galhui_js_1.icon)(galhui_js_1.$.i.search);
    input && (0, galho_1.delay)(t, "input", galhui_js_1.$.delay, () => input(t.e.value));
    return (i ? (0, galho_1.div)(0, [t, i]) : t).cls((0, galhui_js_1.hc)("in" /* input */));
}
exports.search = search;
const lever = (name) => (0, galho_1.g)("input", { type: "checkbox", name }).cls("lv" /* lever */);
exports.lever = lever;
class Pagging extends galho_1.E {
    view() {
        let i = this.i, pags, count = (0, galho_1.g)('span'), total;
        if (i.setlimit) {
            var limits = new dropdown_js_1.Select({
                value: i.limit,
                fluid: true,
                clear: false,
            }, [
                i.minLimit,
                i.minLimit * 2,
                i.minLimit * 4,
                i.minLimit * 10,
                i.minLimit * 20,
                { key: 0, text: 'Mostrar todos' }
            ]);
            (0, galho_1.g)(limits).cls("in");
        }
        return this.bind((0, galho_1.div)("_ bar pag", [
            i.extreme && (0, menu_js_1.mbitem)(galhui_js_1.$.i.first, null, () => this.set('pag', 1)),
            (0, menu_js_1.mbitem)(galhui_js_1.$.i.prev, null, () => this.set('pag', i.pag - 1)),
            (0, exports.output)(),
            (0, menu_js_1.mbitem)(galhui_js_1.$.i.next, null, () => this.set('pag', i.pag + 1)),
            i.extreme && (0, menu_js_1.mbitem)(galhui_js_1.$.i.last, count, () => this.set('pag', pags)),
            limits && [
                (0, galho_1.g)("hr"),
                limits.on('input', (value) => { this.set('limit', value); })
            ],
            i.viewtotal && [(0, galho_1.g)("hr"), total = (0, exports.output)()]
        ]), (s) => {
            if (i.viewtotal)
                total.set(`${Math.min(i.total - i.limit * (i.pag - 1), i.limit || i.total) || 0} / ${i.total || 0}`);
            pags = i.limit ? Math.ceil((i.total || 0) / i.limit) : 1;
            s.cls("off" /* off */, !!(pags < 2 && i.hideOnSingle));
            let t = i.extreme ? 0 : 1;
            s.child(2 - t).set(i.pag);
            s.childs(0, 2 - t).prop('disabled', i.pag == 1);
            s.childs(3 - t, 5 - t * 2).prop('disabled', i.pag == pags);
            count.set(pags);
        });
    }
    get pags() {
        let { limit: l, total: t } = this.i;
        return l ? Math.ceil((t || 0) / l) : 1;
    }
}
exports.Pagging = Pagging;
//#endregion
//#region output
const label = (content) => (0, galho_1.g)("label", (0, galhui_js_1.hc)("lb" /* label */), content);
exports.label = label;
const output = (...content) => (0, galho_1.g)("span", (0, galhui_js_1.hc)("lb" /* label */), content);
exports.output = output;
const keyVal = (key, val) => (0, galho_1.g)("span", (0, galhui_js_1.hc)("in" /* input */), [key + ": ", val]);
exports.keyVal = keyVal;
const message = (c, data) => (0, galho_1.div)((0, galhui_js_1.hc)("ms" /* message */), data).cls(c);
exports.message = message;
const errorMessage = (data) => (0, exports.message)(data).cls("_e" /* error */);
exports.errorMessage = errorMessage;
const tip = (e, value) => e.prop("title", value);
exports.tip = tip;
class Output extends galho_1.E {
    constructor(text, value, fmt) {
        super((0, inutil_1.isS)(text) ? { text, value, fmt } : text);
    }
    key() { return this.i.key; }
    value(value) {
        if ((0, inutil_1.isU)(value))
            return this.i.value;
        else
            this.set('value', value);
        return this;
    }
    view() {
        let i = this.i;
        return this.bind((0, galho_1.div)(), (s) => {
            s
                .uncls().cls((0, galho_1.cl)("in" /* input */, i.color))
                .set([
                i.text, ': ',
                galhui_js_1.$.fmt(i.value, i.fmt, i.def && { def: i.def })
            ]);
        });
    }
}
exports.Output = Output;
const hidden = (head, body, open) => (0, galho_1.div)(["_", "ac" /* accordion */], [
    head = (0, galho_1.div)("hd" /* head */, [
        (0, galhui_js_1.icon)("menuR"),
        head
    ]).cls("on" /* on */, !!open).on("click", () => head.tcls("on" /* on */)),
    (0, galho_1.wrap)(body, "bd" /* body */)
]);
exports.hidden = hidden;
function accordion(items, i = {}) {
    return (0, orray_1.orray)(items).bind((0, galho_1.div)("_ accordion"), ([hd, bd], j, p) => {
        p.place(j * 2, [
            hd = (0, galho_1.div)("hd" /* head */, [
                (0, inutil_1.t)(i.icon) && (0, galhui_js_1.icon)("menuR"),
                hd
            ]).cls("on" /* on */, i.def == j).on("click", () => {
                if (hd.is('.' + "on" /* on */))
                    hd.cls("on" /* on */, false);
                else {
                    (0, inutil_1.t)(i.single) && p.childs("." + "hd" /* head */).cls("on" /* on */, false);
                    hd.cls("on" /* on */);
                }
            }),
            (0, galho_1.wrap)(bd, "bd" /* body */)
        ]);
    });
}
exports.accordion = accordion;
//#endregion
//# sourceMappingURL=data:application/json;base64,