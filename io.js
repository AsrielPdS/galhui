"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.accordion = exports.hidden = exports.Output = exports.tip = exports.errorMessage = exports.message = exports.keyVal = exports.output = exports.label = exports.Pagging = exports.lever = exports.searcher = exports.search = exports.checkbox = exports.textarea = exports.input = void 0;
const galho_1 = require("galho");
const orray_js_1 = require("galho/orray.js");
const dropdown_js_1 = require("./dropdown.js");
const galhui_js_1 = require("./galhui.js");
const menu_js_1 = require("./menu.js");
const util_js_1 = require("galho/util.js");
const list_js_1 = require("./list.js");
const hover_js_1 = require("./hover.js");
const util_js_2 = require("./util.js");
const input = (type, name, ph, input) => (0, galho_1.g)("input", { type, name, placeholder: ph }).c("_ in").on("input", input);
exports.input = input;
const textarea = (name, ph, input) => (0, galho_1.g)("textarea", { name, placeholder: ph }).c("_ in").on("input", input && (function () { input(this.value); }));
exports.textarea = textarea;
const checkbox = (label, input) => (0, galho_1.g)("label", (0, galhui_js_1.hc)("cb" /* checkbox */), [(0, galho_1.g)("input", { type: "checkbox" }).on("input", input && (function () { input(this.checked); })), label]);
exports.checkbox = checkbox;
function search(input) {
    let t = (0, galho_1.g)("input", { type: "search", placeholder: galhui_js_1.w.search }), i = (0, galhui_js_1.icon)(galhui_js_1.$.i.search);
    input && (0, galho_1.delay)(t, "input", galhui_js_1.$.delay, () => input(t.e.value));
    return (i ? (0, galho_1.div)(0, [t, i]) : t).c("_ in");
}
exports.search = search;
function searcher(query) {
    let dt = (0, orray_js_1.orray)(), menu = (0, list_js_1.list)({ kd: false, item: v => [(0, galho_1.div)(0, v.name), (0, galho_1.g)("span", "tag", ["NIF: ", v.nif])] }, dt).c("_ tip"), _, focus = () => _ || (_ = (menu.addTo(galhui_js_1.body),
        (0, util_js_2.anim)(() => galhui_js_1.body.contains(i) ? (0, hover_js_1.fluid)(i.rect(), menu, "vc") : (_(), _ = null)))), i = (0, galho_1.delay)((0, galho_1.g)("input", { type: "search", placeholder: "NIF ou Nome da empresa" })
        .on({
        focus, blur() { _(); _ = null; },
        keydown(e) { (0, list_js_1.kbHandler)(dt, e, {}) && (0, galho_1.clearEvent)(e); }
    }), "input", galhui_js_1.$.delay, async () => {
        if (i.e.value) {
            focus();
            dt.set(await query(i.e.value));
        }
        else {
            _?.();
            _ = null;
        }
    });
    return i;
}
exports.searcher = searcher;
const lever = (name) => (0, galho_1.g)("input", { type: "checkbox", name }).c("lv" /* lever */);
exports.lever = lever;
class Pagging extends galho_1.E {
    view() {
        let i = this.i, pags, count = (0, galho_1.g)('span'), total;
        if (i.setlimit) {
            var limits = new dropdown_js_1.Select({
                value: i.limit,
                fluid: true,
                clear: false,
            }, [
                i.minLimit,
                i.minLimit * 2,
                i.minLimit * 4,
                i.minLimit * 10,
                i.minLimit * 20,
                { key: 0, text: 'Mostrar todos' }
            ]);
            (0, galho_1.g)(limits).c("in");
        }
        return this.bind((0, galho_1.div)("_ bar pag", [
            i.extreme && (0, menu_js_1.mbitem)(galhui_js_1.$.i.first, null, () => this.set('pag', 1)),
            (0, menu_js_1.mbitem)(galhui_js_1.$.i.prev, null, () => this.set('pag', i.pag - 1)),
            (0, exports.output)(),
            (0, menu_js_1.mbitem)(galhui_js_1.$.i.next, null, () => this.set('pag', i.pag + 1)),
            i.extreme && (0, menu_js_1.mbitem)(galhui_js_1.$.i.last, count, () => this.set('pag', pags)),
            limits && [
                (0, galho_1.g)("hr"),
                limits.on('input', (value) => { this.set('limit', value); })
            ],
            i.viewtotal && [(0, galho_1.g)("hr"), total = (0, exports.output)()]
        ]), (s) => {
            if (i.viewtotal)
                total.set(`${Math.min(i.total - i.limit * (i.pag - 1), i.limit || i.total) || 0} / ${i.total || 0}`);
            pags = i.limit ? Math.ceil((i.total || 0) / i.limit) : 1;
            s.c("off" /* off */, !!(pags < 2 && i.hideOnSingle));
            let t = i.extreme ? 0 : 1;
            s.child(2 - t).set(i.pag);
            s.childs(0, 2 - t).prop('disabled', i.pag == 1);
            s.childs(3 - t, 5 - t * 2).prop('disabled', i.pag == pags);
            count.set(pags);
        });
    }
    get pags() {
        let { limit: l, total: t } = this.i;
        return l ? Math.ceil((t || 0) / l) : 1;
    }
}
exports.Pagging = Pagging;
//#endregion
//#region output
const label = (content) => (0, galho_1.g)("label", (0, galhui_js_1.hc)("lb" /* label */), content);
exports.label = label;
const output = (...content) => (0, galho_1.g)("span", (0, galhui_js_1.hc)("lb" /* label */), content);
exports.output = output;
const keyVal = (key, val) => (0, galho_1.g)("span", "_ in", [key + ": ", val]);
exports.keyVal = keyVal;
const message = (c, data) => (0, galho_1.div)((0, galhui_js_1.hc)("ms" /* message */), data).c(c);
exports.message = message;
const errorMessage = (data) => (0, exports.message)(data).c("_e" /* error */);
exports.errorMessage = errorMessage;
const tip = (e, value) => e.prop("title", value);
exports.tip = tip;
class Output extends galho_1.E {
    constructor(text, value, fmt) {
        super((0, util_js_1.isS)(text) ? { text, value, fmt } : text);
    }
    key() { return this.i.key; }
    value(value) {
        if ((0, util_js_1.isU)(value))
            return this.i.value;
        else
            this.set('value', value);
        return this;
    }
    view() {
        let i = this.i;
        return this.bind((0, galho_1.div)(), (s) => {
            s
                .attr("class", false)
                .c((0, galho_1.cl)("in" /* input */, i.color))
                .set([
                i.text, ': ',
                galhui_js_1.$.fmt(i.value, i.fmt, i.def && { def: i.def })
            ]);
        });
    }
}
exports.Output = Output;
const hidden = (head, body, open) => (0, galho_1.div)(["_", "ac" /* accordion */], [
    head = (0, galho_1.div)("hd" /* head */, [
        (0, galhui_js_1.icon)("menuR"),
        head
    ]).c("on" /* on */, !!open).on("click", () => head.tcls("on" /* on */)),
    (0, galho_1.wrap)(body, "bd" /* body */)
]);
exports.hidden = hidden;
function accordion(items, i = {}) {
    return (0, orray_js_1.orray)(items).bind((0, galho_1.div)("_ accordion"), ([hd, bd], j, p) => {
        p.place(j * 2, [
            hd = (0, galho_1.div)("hd" /* head */, [
                (0, util_js_1.t)(i.icon) && (0, galhui_js_1.icon)("menuR"),
                hd
            ]).c("on" /* on */, i.def == j).on("click", () => {
                if (hd.is('.' + "on" /* on */))
                    hd.c("on" /* on */, false);
                else {
                    (0, util_js_1.t)(i.single) && p.childs("." + "hd" /* head */).c("on" /* on */, false);
                    hd.c("on" /* on */);
                }
            }),
            (0, galho_1.wrap)(bd, "bd" /* body */)
        ]);
    });
}
exports.accordion = accordion;
//#endregion
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW8uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpby50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxpQ0FBa0U7QUFDbEUsNkNBQXVDO0FBQ3ZDLCtDQUF1QztBQUN2QywyQ0FBNkQ7QUFDN0QsdUNBQW1DO0FBQ25DLDJDQUF1RTtBQUN2RSx1Q0FBNEM7QUFDNUMseUNBQTBDO0FBQzFDLHVDQUFpQztBQU8xQixNQUFNLEtBQUssR0FBRyxDQUFDLElBQWEsRUFBRSxJQUFTLEVBQUUsRUFBUSxFQUFFLEtBQXlCLEVBQUUsRUFBRSxDQUNyRixJQUFBLFNBQUMsRUFBQyxPQUFPLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBRDlELFFBQUEsS0FBSyxTQUN5RDtBQUVwRSxNQUFNLFFBQVEsR0FBRyxDQUFDLElBQVMsRUFBRSxFQUFPLEVBQUUsS0FBMkIsRUFBRSxFQUFFLENBQzFFLElBQUEsU0FBQyxFQUFDLFVBQVUsRUFBRSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxLQUFLLElBQUksQ0FBQyxjQUFjLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBRGxHLFFBQUEsUUFBUSxZQUMwRjtBQUV4RyxNQUFNLFFBQVEsR0FBRyxDQUFDLEtBQVUsRUFBRSxLQUErQixFQUFFLEVBQUUsQ0FDdEUsSUFBQSxTQUFDLEVBQUMsT0FBTyxFQUFFLElBQUEsY0FBRSxzQkFBWSxFQUFFLENBQUMsSUFBQSxTQUFDLEVBQUMsT0FBTyxFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxDQUFDLENBQUMs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QyxDQUFDLFNBQVM7Z0JBQ2IsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEtBQUssSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFBO1lBQ3RHLElBQUksR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN6RCxDQUFDLENBQUMsQ0FBQyxrQkFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO1lBRTNDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO1lBQ3pCLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7WUFFMUIsQ0FBQyxDQUFDLE1BQU0sQ0FBb0IsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDbkUsQ0FBQyxDQUFDLE1BQU0sQ0FBb0IsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUMsQ0FB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