"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.editing = void 0;
const galho_1 = require("galho");
const orray_js_1 = require("galho/orray.js");
const util_js_1 = require("galho/util.js");
const dropdown_js_1 = require("./dropdown.js");
const galhui_js_1 = require("./galhui.js");
const list_js_1 = require("./list.js");
const menu_js_1 = require("./menu.js");
const util_js_2 = require("./util.js");
function defineSize(items) {
    let size = 0, l = items.length, sizes = [];
    for (let i of items) {
        let s = i.size || 1 / l;
        sizes.push(s);
        size += s;
    }
    for (let i = 0; i < l; i++)
        items[i].size = (sizes[i] / size) * 100;
}
exports.editing = Symbol();
class Table extends galho_1.E {
    // foot: Foot[];
    constructor(i, data) {
        // i.data = data as L;
        super(i);
        this.data = (0, orray_js_1.extend)(data, {
            g: i.single ? null : ["on"],
            key: i.key,
            clear: true
        });
        // this.foot = foot && extend<T>(foot, {
        //   key: i.key,
        //   clear: true
        // });
        i.head || (i.head = c => (0, util_js_1.def)((0, util_js_1.def)(c.text, galhui_js_1.w[c.key]), (0, util_js_2.up)(c.key)));
    }
    // get data() { return this.i.data as L<T>; }
    // get footData() { return this.i.foot as L<T>; }
    get cols() { return this.i.cols; }
    ccss(e, c, span = 1) {
        let sz = 0;
        if ((0, util_js_1.isN)(c)) {
            let cs = this.cols;
            for (let j = 0; j < span; j++)
                sz += cs[c + j].size;
        }
        ;
        return e.c("i").css("width", (sz || c.size) + (this.i.fill ? '%' : 'px'));
    }
    view() {
        let i = this.i, cols = i.cols, all = i.allColumns, req = i.reqColumns, data = this.data, hdOptsLeave, hdOpts = all && (0, dropdown_js_1.dropdown)(null, all.map(c => {
            return (0, menu_js_1.menucb)(cols.includes(c), (0, util_js_1.def)((0, util_js_1.def)(c.text, galhui_js_1.w[c.key]), (0, util_js_2.up)(c.key)), checked => {
                if (checked) {
                    cols.push(c);
                    cols.sort((a, b) => all.indexOf(a) - all.indexOf(b));
                }
                else
                    cols.remove(c);
            }, c.key, req && (req.includes(c.key)));
        })).on("click", e => (0, galho_1.clearEvent)(e)), hd = cols.bind((0, galho_1.div)("hd tr", (0, galho_1.wrap)(i.corner, "sd" /* side */)), {
            insert: (c, j, p) => {
                let s = this.ccss((0, galho_1.wrap)(i.head(c), "i" /* item */), c);
                if (i.resize)
                    (0, galho_1.div)(["div" /* separator */]).addTo(s).on('mousedown', e => {
                        (0, galho_1.clearEvent)(e);
                        let index = cols.indexOf(c) + 1, 
                        //t = '.' + C.item + ':nth-child(' + (index + 2) + ')',
                        rows = d.childs().child(index);
                        galhui_js_1.body.css({ cursor: 'col-resize', userSelect: "none" });
                        function move(e) {
                            c.size = (c.size = Math.max(galhui_js_1.$.rem * 3, e.clientX - s.rect().left));
                            rows.css({ width: c.size + 'px' });
                        }
                        galhui_js_1.doc.on('mousemove', move).one('mouseup', () => {
                            galhui_js_1.doc.off('mousemove', move);
                            galhui_js_1.body.uncss(["cursor", "userSelect"]);
                        });
                    });
                i.sort && s.on("click", () => {
                    if (cols.tag("sort") == c)
                        if (c.desc) {
                            c.desc = false;
                            cols.tag("sort", null);
                        }
                        else {
                            c.desc = true;
                            cols.retag("sort");
                        }
                    else {
                        c.desc = false;
                        cols.tag("sort", c);
                    }
                });
                hdOpts && s.on({
                    mouseenter() { clearTimeout(hdOptsLeave); s.add(hdOpts); },
                    mouseleave() { hdOptsLeave = setTimeout(() => hdOpts.remove().child(".menu")?.remove(), 300); }
                });
                p.place(j + 1, s);
            },
            tag(s, active, tag, v, j, p) {
                switch (tag) {
                    case "sort":
                        (s = p.child(j + 1)).child(".sort")?.remove();
                        if (active)
                            s.add((0, galhui_js_1.icon)(galhui_js_1.$.i[v.desc ? 'desc' : 'asc']).c("sort"));
                        i.sort.call(v, active);
                        break;
                    default:
                        s.c(tag, active);
                }
            },
            remove(_, _i, p) { p.unplace(_i + 1); },
            clear(p) { p.childs(1).remove(); }
        }), foot = (v) => (0, galho_1.g)(v(this), "_ ft tr"), ft = i.foot && (0, galho_1.m)(...i.foot?.map(foot)), d = (0, galho_1.div)("_ tb" + (i.fill ? " fill" : ""), [hd, ft])
            .prop('tabIndex', 0)
            .on("keydown", (e) => (0, list_js_1.kbHandler)(data, e, i) && (0, galho_1.clearEvent)(e));
        data.bind(d, {
            insert: (s, j, p) => {
                let t2 = (0, galho_1.div)("_ tr i", [
                    (0, galho_1.div)("sd" /* side */),
                    cols.map(c => {
                        let v = s[c.key];
                        return this.ccss((0, galho_1.wrap)(c.fmt ? (0, util_js_1.isS)(c.fmt) ? galhui_js_1.$.fmt(v, c.fmt) : c.fmt({ v, p: i.p, s }) : v).css({ textAlign: c.align }), c);
                    }),
                    // i.options && div(C.options, i.options.map(opt => opt(s, _i)))
                ]).d(s);
                i.style?.(t2, s, j);
                p.place(j + 1, (0, list_js_1.crudHandler)(t2, data, i));
            },
            tag(s, active) {
                s.c("crt" /* current */, active).e.scrollIntoView({
                    block: "nearest",
                    inline: "nearest"
                });
            },
            remove(_, i, p) { p.unplace(i + 1); },
            clear(s) { s.childs(".i").remove(); },
            groups: { on: (s, active) => s.c("on", active) }
        });
        i.cols.onupdate(() => {
            this.data.reloadAll();
            ft?.eachS((f, j) => f.replace(foot(i.foot[j])));
        });
        i.resize && d.c("brd" /* bordered */);
        return d;
    }
}
exports.default = Table;
/**rendered data */
function _rData(p, cols) {
    let r = [];
    p.childs().do((s, i) => {
        let t = r[i] = {}, cells = s.childs();
        for (let j = 0; j < (0, util_js_1.l)(cols); j++)
            t[cols[j].key] = (0, galho_1.g)(cells[j + 1]).text();
    });
    return r;
}
//# sourceMappingURL=data:application/json;base64,